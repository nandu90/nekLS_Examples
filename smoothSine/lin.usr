      include "experimental/lvlSet.f"
c-----------------------------------------------------------------------
      subroutine uservp(ix,iy,iz,eg) ! set variable properties
      implicit none
      integer ix,iy,iz,eg,e
     
      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      e = gllel(eg)

      utrans = 1.0
      udiff = cpfld(ifield,1)

      if(ifavm(ifield-1))then
        udiff = 1e-10       !must be tiny for hyperbolic
      elseif(ifsvv(ifield-1))then
        udiff = 1e-10      !must be tiny for hyperbolic
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userf(ix,iy,iz,eg) ! set acceleration term
      implicit none
      integer ix,iy,iz,eg,e

      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      e = gllel(eg)

      ffx = 0.0
      ffy = 0.0
      ffz = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine userq(ix,iy,iz,eg) ! set source term
      implicit none
      integer ix,iy,iz,eg,e

      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      e = gllel(eg)
      
      qvol   = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine userbc(ix,iy,iz,iside,eg) ! set up boundary conditions
      implicit none
      integer ix,iy,iz,iside,eg

      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'

      ux   = 0.0
      uy   = 0.0
      uz   = 0.0
      temp = 0.0

      return
      end
c-----------------------------------------------------------------------
      subroutine useric(ix,iy,iz,eg) ! set up initial conditions
      implicit none
      integer ix,iy,iz,eg,e

      include 'SIZE'
      include 'TOTAL'
      include 'NEKUSE'
      
      real x1

      e = gllel(eg)

      ux = 1.0
      uy = 0.0
      uz = 0.0

      !     Initializes Level-set contour field
      x1 = xm1(ix,iy,iz,e)
      temp = sin(PI*x1)
      
      return
      end
c-----------------------------------------------------------------------
      subroutine userchk()
      implicit none

      include 'SIZE'
      include 'TOTAL'

      if(istep.eq.0)then
        call outfld('  ')
      endif

      return
      end
c-----------------------------------------------------------------------
      subroutine userqtl ! Set thermal divergence

      call userqtl_scig 

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat()   ! This routine to modify element vertices
      implicit none

      include 'SIZE'
      include 'TOTAL'

      ifflow = .false.
      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat2()  ! This routine to modify mesh coordinates
      implicit none

      return
      end
c-----------------------------------------------------------------------
      subroutine usrdat3()
      implicit none

      include 'SIZE'
      include 'TOTAL'
      include 'AVM'
      include 'SVV'

c---------------------------------------------------      
c     This section to specify user defined parameters
c     for AVM/SVV. Leave commented to use default parameters
c     parameters. 

c     scalar 1 (Temp)     
      ! No regularization

c     scalar 2      
      avm_ncut(2) = 1
      avm_c1(2) = 1.0

c     scalar 3
      svv_c0(3) = 0.1
      ! svvcut(3) = (lx1-1.0)/2.0
      ! ifupwindsvv(3) = .true.

c     scalar 4
      svv_c0(4) = 0.1
      svvcut(4) = (lx1-2.0)/2.0
      ! ifupwindsvv(3) = .true.
c--------------------------------------------------
      
      return
      end
c---------------------------------------------------------------------
